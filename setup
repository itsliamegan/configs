#!/usr/bin/env python3
from pathlib import Path
from shutil import copy as copy_file, copytree as copy_dir

def link(name, remote_dir):
	local_dir = Path.cwd()
	local_path = local_dir.joinpath(name)
	remote_path = remote_dir.joinpath(name)

	if not local_path.exists():
		print(f"{local_path} does not exist, skipping")
		return

	if remote_path.exists():
		print(f"{remote_path} already exists, skipping")
		return

	remote_path.symlink_to(local_path)
	print(f"linked {remote_path} to {local_path}")

def copy(name, remote_dir):
	local_dir = Path.cwd()
	local_path = local_dir.joinpath(name)
	remote_path = remote_dir.joinpath(name)

	if remote_path.exists():
		print(f"{remote_path} already exists, skipping")
		return

	if local_path.is_dir():
		copy_dir(local_path, remote_path)
	else:
		copy_file(local_path, remote_path)

	print(f"copied {local_path} to {remote_path}")

home_dir = Path.home()
xdg_config_dir = home_dir.joinpath(".config")

link("bin/", home_dir),
link(".vim/", home_dir),
link(".bashrc", home_dir),
link(".gitconfig", home_dir),
link(".gitignore", home_dir),
link(".inputrc", home_dir),
link(".profile", home_dir),
link(".tool-versions", home_dir),
link(".vimrc", home_dir),
link(".Xmodmap", home_dir),
link(".Xresources", home_dir),

# redshift's apparmor permissions don't handle symlinks; copy
# the configuration instead
copy("redshift/", xdg_config_dir)
